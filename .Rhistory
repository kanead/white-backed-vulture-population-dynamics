rt(0)
rt(0,df=1)
rt(1,df=1)
rt(0,df=10)
pt(0, df=Inf)
pt(0, df=2)
pt(0, df=10)
pt(1, df=10)
pt(0, df=10)
pnorm(1)
pnorm(1)
pt(1, df=Inf)
pt(1, df=10)
qnorm(0.025,lower.tail = F)
qt(0.025,df=Inf,lower.tail = F)
qt(0.025,df=10,lower.tail = F)
load("C:/Users/akane/Desktop/Science/Manuscripts/Manx Shearwaters/Saskia Model Run/Take 2/Data_30012017.RData")
moddat1<-moddat[!is.na(moddat$forabin) & !is.na(moddat$chlora8day) & moddat$period=="CR" & moddat$chlora8day<30,]
moddat1$birdid<-as.factor(as.character(moddat1$birdid))
moddat1$tripid<-as.factor(as.character(moddat1$tripid))
moddat2<-moddat[!is.na(moddat$combin) & !is.na(moddat$chlora8day) & moddat$period=="CR" & moddat$chlora8day<30,]
moddat3<-moddat[!is.na(moddat$forabin) & !is.na(moddat$SST8day) & moddat$period=="CR",]
moddat3$birdid<-as.factor(as.character(moddat3$birdid))
moddat3$tripid<-as.factor(as.character(moddat3$tripid))
moddat4<-moddat[!is.na(moddat$combin) & !is.na(moddat$SST8day) & moddat$period=="CR",]
moddat5<-moddat[!is.na(moddat$forabin) & !is.na(moddat$bathy) & moddat$period=="CR" & moddat$bathy<0,]
moddat5$birdid<-as.factor(as.character(moddat5$birdid))
moddat5$tripid<-as.factor(as.character(moddat5$tripid))
moddat6<-moddat[!is.na(moddat$combin) & !is.na(moddat$bathy) & moddat$period=="CR" & moddat$bathy<0,]
##input second part
moddat7<-modrun[!is.na(modrun$forabin) & !is.na(modrun$chlora8day) ,]
moddat8<-modrun[!is.na(modrun$combin) & !is.na(modrun$chlora8day) ,]
moddat9<-modrun[!is.na(modrun$forabin) & !is.na(modrun$SST8day) ,]
moddat10<-modrun[!is.na(modrun$combin) & !is.na(modrun$SST8day) ,]
moddat11<-modrun[!is.na(modrun$forabin) & !is.na(modrun$bathy) & modrun$bathy<0,]
moddat12<-modrun[!is.na(modrun$combin) & !is.na(modrun$bathy)  & modrun$bathy<0,]
g1<-gamm(forabin~s(log(chlora8day))+s(log(chlora8day),by=group), data = moddat1, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g2<-gamm(combin~s(log(chlora8day)),s(log(chlora8day),by=group), data = moddat2 ,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g3<-gamm(forabin~s(SST8day)+s(SST8day,by=group), data = moddat3,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g4<-gamm(combin~s(SST8day)+s(SST8day,by=group), data = moddat4,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g5<-gamm(forabin~ s(bathy)+ s(bathy,by=group), data = moddat5,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid),family=binomial)
#g6<-gamm(combin~ s(bathy)+ s(bathy,by=group), data = moddat6, random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
##add to second run: models for period
g7<-gamm(forabin~s(log(chlora8day))+s(log(chlora8day),by=period), data = moddat7, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g8<-gamm(combin~s(log(chlora8day)),s(log(chlora8day),by=group), data = moddat8 ,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g9<-gamm(forabin~s(SST8day)+s(SST8day,by=period), data = moddat9,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g10<-gamm(combin~s(SST8day)+s(SST8day,by=group), data = moddat10,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g11<-gamm(forabin~ s(bathy)+ s(bathy,by=period), data = moddat11,randomlist(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g12<-gamm(combin~ s(bathy)+ s(bathy,by=group), data = moddat12, random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g13<-gamm(forabin~s(log(chlora8day))+ s(log(chlora8day),by=period)+s(log(chlora8day),by=sex)+s(log(chlora8day),by=site)+s(log(chlora8day),by=year), data = moddat7, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g15<-gamm(forabin~s(SST8day)+ s(SST8day,by=period)+ s(SST8day,by=sex)+ s(SST8day,by=site)+ s(SST8day,by=year), data = moddat9,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g17<-gamm(forabin~ s(bathy)+ s(bathy,by=period)+s(bathy,by=sex)+s(bathy,by=site)+s(bathy,by=year), data = moddat11,randomlist(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
library("mgcv", lib.loc="C:/Program Files/R/R-3.3.1/library")
g1<-gamm(forabin~s(log(chlora8day))+s(log(chlora8day),by=group), data = moddat1, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g1<-gamm(forabin~s(log(chlora8day))+s(log(chlora8day),by=group), data = moddat1, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
moddat1<-moddat[!is.na(moddat$forabin) & !is.na(moddat$chlora8day) & moddat$period=="CR" & moddat$chlora8day<30,]
moddat1$birdid<-as.factor(as.character(moddat1$birdid))
moddat1$tripid<-as.factor(as.character(moddat1$tripid))
moddat2<-moddat[!is.na(moddat$combin) & !is.na(moddat$chlora8day) & moddat$period=="CR" & moddat$chlora8day<30,]
moddat3<-moddat[!is.na(moddat$forabin) & !is.na(moddat$SST8day) & moddat$period=="CR",]
moddat3$birdid<-as.factor(as.character(moddat3$birdid))
moddat3$tripid<-as.factor(as.character(moddat3$tripid))
moddat4<-moddat[!is.na(moddat$combin) & !is.na(moddat$SST8day) & moddat$period=="CR",]
moddat5<-moddat[!is.na(moddat$forabin) & !is.na(moddat$bathy) & moddat$period=="CR" & moddat$bathy<0,]
moddat5$birdid<-as.factor(as.character(moddat5$birdid))
moddat5$tripid<-as.factor(as.character(moddat5$tripid))
moddat6<-moddat[!is.na(moddat$combin) & !is.na(moddat$bathy) & moddat$period=="CR" & moddat$bathy<0,]
##input second part
moddat7<-modrun[!is.na(modrun$forabin) & !is.na(modrun$chlora8day) ,]
moddat8<-modrun[!is.na(modrun$combin) & !is.na(modrun$chlora8day) ,]
moddat9<-modrun[!is.na(modrun$forabin) & !is.na(modrun$SST8day) ,]
moddat10<-modrun[!is.na(modrun$combin) & !is.na(modrun$SST8day) ,]
moddat11<-modrun[!is.na(modrun$forabin) & !is.na(modrun$bathy) & modrun$bathy<0,]
moddat12<-modrun[!is.na(modrun$combin) & !is.na(modrun$bathy)  & modrun$bathy<0,]
g1<-gamm(forabin~s(log(chlora8day))+s(log(chlora8day),by=group), data = moddat1, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g2<-gamm(combin~s(log(chlora8day)),s(log(chlora8day),by=group), data = moddat2 ,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g3<-gamm(forabin~s(SST8day)+s(SST8day,by=group), data = moddat3,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g4<-gamm(combin~s(SST8day)+s(SST8day,by=group), data = moddat4,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g5<-gamm(forabin~ s(bathy)+ s(bathy,by=group), data = moddat5,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid),family=binomial)
#g6<-gamm(combin~ s(bathy)+ s(bathy,by=group), data = moddat6, random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
##add to second run: models for period
g7<-gamm(forabin~s(log(chlora8day))+s(log(chlora8day),by=period), data = moddat7, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g8<-gamm(combin~s(log(chlora8day)),s(log(chlora8day),by=group), data = moddat8 ,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g9<-gamm(forabin~s(SST8day)+s(SST8day,by=period), data = moddat9,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g10<-gamm(combin~s(SST8day)+s(SST8day,by=group), data = moddat10,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g11<-gamm(forabin~ s(bathy)+ s(bathy,by=period), data = moddat11,randomlist(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g12<-gamm(combin~ s(bathy)+ s(bathy,by=group), data = moddat12, random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g13<-gamm(forabin~s(log(chlora8day))+ s(log(chlora8day),by=period)+s(log(chlora8day),by=sex)+s(log(chlora8day),by=site)+s(log(chlora8day),by=year), data = moddat7, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g15<-gamm(forabin~s(SST8day)+ s(SST8day,by=period)+ s(SST8day,by=sex)+ s(SST8day,by=site)+ s(SST8day,by=year), data = moddat9,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g17<-gamm(forabin~ s(bathy)+ s(bathy,by=period)+s(bathy,by=sex)+s(bathy,by=site)+s(bathy,by=year), data = moddat11,randomlist(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
library("mgcv", lib.loc="C:/Program Files/R/R-3.3.1/library")
g1<-gamm(forabin~s(log(chlora8day))+s(log(chlora8day),by=group), data = moddat1, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g2<-gamm(combin~s(log(chlora8day)),s(log(chlora8day),by=group), data = moddat2 ,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g3<-gamm(forabin~s(SST8day)+s(SST8day,by=group), data = moddat3,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g4<-gamm(combin~s(SST8day)+s(SST8day,by=group), data = moddat4,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g5<-gamm(forabin~ s(bathy)+ s(bathy,by=group), data = moddat5,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid),family=binomial)
#g6<-gamm(combin~ s(bathy)+ s(bathy,by=group), data = moddat6, random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
##add to second run: models for period
g7<-gamm(forabin~s(log(chlora8day))+s(log(chlora8day),by=period), data = moddat7, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g8<-gamm(combin~s(log(chlora8day)),s(log(chlora8day),by=group), data = moddat8 ,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g9<-gamm(forabin~s(SST8day)+s(SST8day,by=period), data = moddat9,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g10<-gamm(combin~s(SST8day)+s(SST8day,by=group), data = moddat10,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g11<-gamm(forabin~ s(bathy)+ s(bathy,by=period), data = moddat11,randomlist(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g12<-gamm(combin~ s(bathy)+ s(bathy,by=group), data = moddat12, random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g13<-gamm(forabin~s(log(chlora8day))+ s(log(chlora8day),by=period)+s(log(chlora8day),by=sex)+s(log(chlora8day),by=site)+s(log(chlora8day),by=year), data = moddat7, random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g15<-gamm(forabin~s(SST8day)+ s(SST8day,by=period)+ s(SST8day,by=sex)+ s(SST8day,by=site)+ s(SST8day,by=year), data = moddat9,random=list(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g17<-gamm(forabin~ s(bathy)+ s(bathy,by=period)+s(bathy,by=sex)+s(bathy,by=site)+s(bathy,by=year), data = moddat11,randomlist(birdid=~1,tripid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
load("C:/Users/akane/Desktop/Science/Manuscripts/Manx Shearwaters/Saskia Model Run/Take 2/Data_30012017.RData")
g3<-gamm(forabin~s(SST8day)+s(SST8day,by=group), data = moddat3, random=list(birdid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g1<-gamm(forabin~s(log(chlora8day),by=group), data = moddat1, random=list(birdid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g1
summary(g1$lme)
plot(g1$gam)
summary(g1$gam)
g3<-gamm(forabin~ s(SST8day,by=group), data = moddat3, random=list(birdid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g4<-gamm(combin~s(SST8day)+s(SST8day,by=group), data = moddat4,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g5<-gamm(forabin~ s(bathy,by=group), data = moddat5,random=list(birdid=~1), correlation=corAR1(form=~tripseq|birdid/tripid),family=binomial)
#g6<-gamm(combin~ s(bathy)+ s(bathy,by=group), data = moddat6, random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
##add to second run: models for period
g7<-gamm(forabin~s(log(chlora8day),by=period), data = moddat7, random=list(birdid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g8<-gamm(combin~s(log(chlora8day)),s(log(chlora8day),by=group), data = moddat8 ,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g9<-gamm(forabin~s(SST8day,by=period), data = moddat9,random=list(birdid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g10<-gamm(combin~s(SST8day)+s(SST8day,by=group), data = moddat10,random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g11<-gamm(forabin~ s(bathy,by=period), data = moddat11, random=list(birdid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
#g12<-gamm(combin~ s(bathy)+ s(bathy,by=group), data = moddat12, random=list(as.factor(birdid)=~1,as.factor(tripid)=~1), correlation=corAR1(form=~tripseq|as.factor(birdid)/as.factor(tripid)), family=binomial)
g13<-gamm(forabin~ s(log(chlora8day),by=period)+s(log(chlora8day),by=sex)+s(log(chlora8day),by=site)+s(log(chlora8day),by=year), data = moddat7, random=list(birdid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g15<-gamm(forabin~ s(SST8day,by=period)+ s(SST8day,by=sex)+ s(SST8day,by=site)+ s(SST8day,by=year), data = moddat9,random=list(birdid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
g17<-gamm(forabin~ s(bathy,by=period)+s(bathy,by=sex)+s(bathy,by=site)+s(bathy,by=year), data = moddat11,random=list(birdid=~1), correlation=corAR1(form=~tripseq|birdid/tripid), family=binomial)
save.image("E:/Model Adam PC/Models_out.RData")
save.image("C:/Users/akane/Desktop/Science/Manuscripts/Manx Shearwaters/Saskia Model Run/Model_run_out.RData")
theta=seq(from=0,to=1,by=.01)
plot(theta,dbeta(theta,1,1),type="l")
plot(theta,dbeta(theta,4,2),type="l")
plot(theta,dbeta(theta,8,4),type="l")
1-pbeta(.25,8,4)
1-pbeta(.5,8,4)
1-pbeta(.8,8,4)
41/(41+11)  # posterior mean
33/40       # MLE
lines(theta,dbeta(theta,41,11))
32/(32+20)  # posterior mean
24/40       # MLE
plot(theta,dbeta(theta,32,20),type="l")
lines(theta,dbeta(theta,8,4),lty=2)
lines(theta,44*dbinom(24,size=40,p=theta),lty=3)
1-pbeta(.25,32,20)
1-pbeta(.5,32,20)
1-pbeta(.8,32,20)
qbeta(.025,32,20)
qbeta(.975,32,20)
theta1=rbeta(1000,41,11)
theta2=rbeta(1000,32,20)
mean(theta1>theta2)
41/(41+11)  # posterior mean
33/40       # MLE
# lines(theta,dbeta(theta,41,11))
# plot posterior first to get the right scale on the y-axis
plot(theta,dbeta(theta,41,11),type="l")
lines(theta,dbeta(theta,8,4),lty=2)
# plot likelihood
lines(theta,dbinom(33,size=40,p=theta),lty=3)
# plot scaled likelihood
lines(theta,44*dbinom(33,size=40,p=theta),lty=3)
# posterior probabilities
1-pbeta(.25,41,11)
1-pbeta(.5,41,11)
1-pbeta(.8,41,11)
# equal-tailed 95% credible interval
qbeta(.025,41,11)
qbeta(.975,41,11)
1-pbeta(.5,8,0)
1-pbeta(.5,4,0)
theta=seq(from=0,to=1,by=.01)
plot(theta,dbeta(theta,1,5),type="l")
0/4
1/(1+5)
pbeta(q=0.5, shape1=1, shape2=5)
pbeta(q=0.35, shape1=6, shape2=14)
pbeta(q=0.35, shape1=6+0, shape2=14+5)
qbeta(p=0.975, shape1=6, shape2=14)
# Use the new Beta(a+0,b+5) posterior for theta to assess this probability, where a and b were the previous posterior parameters.
pbeta(q=0.35, shape1=8+0, shape2=16+5)
pbeta(q=0.35, shape1=8, shape2=16)
qbeta(p=0.975, shape1=8, shape2=16)
sqrt(20)/5
sqrt(64)
8*0.01
lambda.range<-seq(0,3000)
# prior
prior<-dgamma(lambda.range, shape=7, scale=1/.01)
prior
plot(prior)
lambda.range<-seq(0,3000)
# prior
prior<-dgamma(lambda.range, shape=6, scale=67)
plot(prior)
lambda.range<-seq(0,20,by = 0.01)
lambda.range<-seq(0,3000)
# prior
prior<-dgamma(lambda.range, shape=6, scale=67)
plot(prior)
lambda.range<-seq(0,20,0.1)
prior<-dgamma(lambda.range, shape=6, scale=67)
plot(prior)
lambda.range<-seq(0,20)
prior<-dgamma(lambda.range, shape=6, scale=67)
plot(prior)
curve(dgamma(x, shape=6, scale=67), add=TRUE, col='blue')
x <- rgamma(500,shape=6,scale=67)
plot(x)
curve(dgamma(x, shape=6, scale=67), add=TRUE, col='blue')
x<-c(9, 12, 10, 15, 13)
x<-c(9, 12, 10, 15, 13)
mean(x)
sum(x)
67/6
ppois(.95,11.17)
ppois(.95,11.17,lower.tail = F)
qpois(0.95,11.17)
qpois(0.95,67/6)
qpois(0.05,67/6)
qpois(0.5,67/6)
x<-c(9, 12, 10, 15, 13)
mean(x)
length(x)
67+109
qgamma(0.05,67,6)
qgamma(0.05,67,6)
# fecundity calculation, (Gauthier & Lebreton (2004) Population models for Greater Snow Geese)
bp <- 0.85 # breeding propensity
cs <- 1 # clutch size
hs <- 0.75 # hatching success
fs <- 0.6 # fledging success
fecundity <- bp * (cs/2) * hs * fs # divide by 2 to get females only
fecundity
MZN<-c(0,0,0,0,0.09818871,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0
0.42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0.8601882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0.8601882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0.513405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0.513405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
MKZN <- matrix ((MKZN), ncol=21, byrow = TRUE)
MZN<-c(0,0,0,0,0.09818871,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0,
0.42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0.8601882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0.8601882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0.513405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0.513405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
MKZN <- matrix ((MKZN), ncol=21, byrow = TRUE)
MKZN<-c(0,0,0,0,0.09818871,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0,
0.42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0.8601882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0.8601882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0.513405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0.513405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
MKZN <- matrix ((MKZN), ncol=21, byrow = TRUE)
MKZN
MKZN
MKZN
nKZN<-c(10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0)
nKZN<-matrix (nKR, ncol=1)
nKZN<-c(10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0)
nKZN<-matrix (nKZN, ncol=1)
nKZN
library(popbio)
popModelKZN <- pop.projection(MKZN,nKZN,iterations=10)
MKZN
nKZN
MKZN %*% nKZN
MKZN %*% nKZN
MKZN %*% nKZN
dim(MKZN)
library(popbio)
MKZN<-c(0,0,0,0,0.09818871,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0,
0.42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0.8601882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0.8601882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0.513405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0.513405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,
)
MKZN<-c(0,0,0,0,0.09818871,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0.1084886,0,
0.42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0.8601882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0.8601882,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0.513405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0.513405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5672604,0
)
MKZN <- matrix ((MKZN), ncol=21, byrow = TRUE)
MKZN
MKZN <- matrix ((MKZN), ncol=21, byrow = TRUE)
nKZN<-c(10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0)
nKZN<-matrix (nKZN, ncol=1)
popModelKZN <- pop.projection(MKZN,nKZN,iterations=10)
popModelKZN
data(whale)
whale
splitA(whale)
sensitivity(whale)
matplot2(sensitivity(whale), type='b', legend='topleft', ltitle='Fate',
main='Killer Whale sensitivity')
matplot2(sensitivity(whale), type='b', legend='topleft', ltitle='Fate',
main='Killer Whale sensitivity')
MKZN %*% nKZN
dim(MKZN)
setwd("C:\\Users\\akane\Desktop\\Science\\Manuscripts\\White-backed Vulture Pop Dynamics\\Code\\white-backed-vulture-population-dynamics")
setwd("c:\\Users\\akane\Desktop\\Science\\Manuscripts\\White-backed Vulture Pop Dynamics\\Code\\white-backed-vulture-population-dynamics")
setwd("C:\\Users\\akane\Desktop\\Science\\Manuscripts\\White-backed Vulture Pop Dynamics\\Code\\white-backed-vulture-population-dynamics")
setwd("C:/Users/akane/Desktop/Science/Manuscripts/White-backed Vulture Pop Dynamics/Code/white-backed-vulture-population-dynamics")
dir()
mydata<-read.csv("KZN Matrix basic.csv", sep = ",",header = F)
mydata
MKZN<-mydata
MKZN <- matrix ((MKZN), ncol=21, byrow = TRUE)
nKZN<-c(10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0)
nKZN<-matrix (nKZN, ncol=1)
popModelKZN <- pop.projection(MKZN,nKZN,iterations=10)
MKZN
mydata
MKZN<-mydata
MKZN
MKZN <- matrix ((MKZN), ncol=21, byrow = TRUE)
MKZN
mydata<-read.csv("KZN Matrix basic.csv", sep = ",",header = F)
mydata
names(mydata)
mydata[!rownames(mydata) %in% remove, ]
mydata <- as.matrix(read.table(KZN Matrix basic.csv, header=F, sep = ",",
as.is=TRUE))
mydata <- as.matrix(read.table("KZN Matrix basic.csv", header=F, sep = ",",
as.is=TRUE))
mydata
MKZN <- matrix ((MKZN), ncol=21, byrow = TRUE)
MKZN
MKZN <- matrix ((mydata), ncol=21, byrow = TRUE)
MKZN
nKZN<-c(10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0)
nKZN<-matrix (nKZN, ncol=1)
popModelKZN <- pop.projection(MKZN,nKZN,iterations=10)
popModelKZN
rm(list=ls(all=TRUE))   # clears the R memory, which is sometimes useful
library(MASS) # an R package needed for some matrix functions
library(quadprog)
library(popbio)
sg0 <- 0.4
sg1 <- 0.6
s <- 0.82  # adult survival common to both sites
fg <- 0.8  # half the mean clutch size (modeling females only)
pg2 <- 0.3 # proportion of adults that attempt to breed each year at age 2, etc.
pg3 <- 0.5
pg4 <- 0.7
pg5 <- 1
# Bad sites
sb0 <- 0.4
sb1 <- 0.5
fb <- 0.5  # half the mean clutch size at Bad sites
pb2 <- 0.5
pb3 <- 0.8
pb4 <- 1
pb5 <- 1
s1gb <- 0.2 # Good to Bad
s1bg <- 0.3 # Bad to Good
A <- matrix(c(
0, sg0*fg*pg2, sg0*fg*pg3, sg0*fg*pg4, sg0*fg*pg5, 0, 0, 0, 0, 0,
sg1, 0, 0, 0, 0, s1bg, 0, 0, 0, 0,
0, s, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, s, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, s, s, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, sb0*fb*pb2, sb0*fb*pb3, sb0*fb*pb4, sb0*fb*pb5,
s1gb, 0, 0, 0, 0, sb1, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, s, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, s, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, s, s), nrow = 10, byrow = TRUE)
A
lambda(A)
rows <- dim(A)[1]
cols <- dim(A)[2]
eig <- eigen(A)           # eigenvalues of A
EigVecs <- eig$vectors    # eigenvectors of A
Lambdas <- Re(eig$values) # real number components of eigenvalues
Lambda <- max(Lambdas)    # long-term geometric rate of population growth
Lambda
pos <- which.max(Lambdas)  # finding the position of the dominant eigenvalue
w <- Re(eig$vectors[1:rows,pos]) # its associated right eigenvector
w
sad <- w/(sum(w))
sad <- round(sad,3) # scaled dominant right eigenvector: Stable Age Distribution
V <- Conj(ginv(EigVecs))   # left eigenvector; NOTE this notation from H Caswell
v <- Re(t(t(V[pos,])))     # dominant left eigenvector
v
rv <- v/(sum(v))
rv <- round(rv,3)          # scaled to provide proportional Reproductive Values
sad
rv
gull.vr <- list(sg0=0.4,sg1=0.6,s=0.82,fg=0.8,pg2=0.3,pg3=0.5,pg4=0.7,pg5=1,
sb0=0.4,sb1=0.5,fb=0.5,pb2=0.5,pb3=0.8,pb4=1,pb5=1,s1gb=0.2,s1bg=0.3)
gull.A <- expression(
0, sg0*fg*pg2, sg0*fg*pg3, sg0*fg*pg4, sg0*fg*pg5, 0, 0, 0, 0, 0,
sg1, 0, 0, 0, 0, s1bg, 0, 0, 0, 0,
0, s, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, s, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, s, s, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, sb0*fb*pb2, sb0*fb*pb3, sb0*fb*pb4, sb0*fb*pb5,
s1gb, 0, 0, 0, 0, sb1, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, s, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, s, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, s, s)
llsenselas <- vitalsens(gull.A,gull.vr)
llsenselas
gb <- 0 # Good to Bad
bg <- 0 # Bad to Good
A <- matrix(c(
0, sg0*fg*pg2, sg0*fg*pg3, sg0*fg*pg4, sg0*fg*pg5, 0, 0, 0, 0, 0,
sg1, 0, 0, 0, 0, s1bg, 0, 0, 0, 0,
0, s*(1-gb), 0, 0, 0, 0, s*bg, 0, 0, 0,
0, 0, s*(1-gb), 0, 0, 0, 0, s*bg, 0, 0,
0, 0, 0, s*(1-gb), s*(1-gb), 0, 0, 0, s*bg, s*bg,
0, 0, 0, 0, 0, 0, sb0*fb*pb2, sb0*fb*pb3, sb0*fb*pb4, sb0*fb*pb5,
s1gb, 0, 0, 0, 0, sb1, 0, 0, 0, 0,
0, s*gb, 0, 0, 0, 0, s*(1-bg), 0, 0, 0,
0, 0, s*gb, 0, 0, 0, 0, s*(1-bg), 0, 0,
0, 0, 0, s*gb, s*gb, 0, 0, 0, s*(1-bg), s*(1-bg)), nrow = 10, byrow = TRUE)
A
ratio <- numeric()  # a storage bin for holding calculations of a ratio
n <- matrix(1,10,1) # a vector with an initial abundance of 1 individual per
tspan <- 50
for (t in 1:tspan){
n <- A%*%n        # %*% = matrix multiplication in R
# note that we simply overwrite the abundance vector at each time step
# since we have no need to store it for these questions. It is updating.
Nbreedg <- pg2*n[2]+pg3*n[3]+pg4*n[4]+pg5*n[5]
Nbreedb <- pb2*n[7]+pb3*n[8]+pb4*n[9]+pb5*n[10]
ratio[t] <- Nbreedg/Nbreedb  # this we store
}
ratio
